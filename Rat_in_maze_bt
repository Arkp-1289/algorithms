#include <bits/stdc++.h> 
using namespace std;
void solve(int i,int j,int n,vector<int>&v,vector<vector<int>>&vis,vector<vector<int>>&maze,vector<vector<int>>&res){
  if (i==n-1 && j==n-1){
    v[(i*n)+j]=1;
    res.push_back(v);
    return;
  }
  if (i+1<n && vis[i][j]==-1 && maze[i][j]==1){
    v[(i*n)+j]=1;
    vis[i][j]=1;
    solve(i+1,j,n,v,vis,maze,res);
    v[(i*n)+j]=0;
    vis[i][j]=-1;
  }
  if (j-1>=0 && vis[i][j]==-1 && maze[i][j]==1){
     v[(i*n)+j]=1;
    vis[i][j]=1;
    solve(i,j-1,n,v,vis,maze,res);
    v[(i*n)+j]=0;
    vis[i][j]=-1;
  }
  if (j+1<n && vis[i][j]==-1 && maze[i][j]==1){
     v[(i*n)+j]=1;
    vis[i][j]=1;
    solve(i,j+1,n,v,vis,maze,res);
    v[(i*n)+j]=0;
    vis[i][j]=-1;
  }
  if (i-1>=0 && vis[i][j]==-1 && maze[i][j]==1){
    v[(i*n)+j]=1;
    vis[i][j]=1;
    solve(i-1,j,n,v,vis,maze,res);
    v[(i*n)+j]=0;
    vis[i][j]=-1;
  }


}

vector<vector<int> > ratInAMaze(vector<vector<int>> &maze, int n){
  vector<vector<int>>res;
  vector<int>v(n*n,0);
  v[0]=1;
  vector<vector<int>>vis(n,vector<int>(n,-1));
  solve(0,0,n,v,vis,maze,res);
  return res;
}
