#include <bits/stdc++.h>

int check(int i,int j,int n,vector<vector<int>>& triangle,vector<vector<int>>& dp){
	if (i==n-1){
		return triangle[i][j];
	}

	if (dp[i][j]!=-1){return dp[i][j];}

	int down=check(i+1,j,n,triangle,dp);

	int dig=check(i+1,j+1,n,triangle,dp);

	dp[i][j]=triangle[i][j]+min(down,dig);

	return dp[i][j];

}


int minimumPathSum(vector<vector<int>>& triangle, int n){
	// Write your code here.
	vector<vector<int>>dp(n,vector<int>(n,-1));
	return check(0,0,n,triangle,dp);
	// return res;


}
